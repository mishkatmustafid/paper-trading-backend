"""models updated

Revision ID: 634fdcb11f8d
Revises: 05ccaa4c4c1b
Create Date: 2023-07-03 15:57:19.943556

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "634fdcb11f8d"
down_revision = "05ccaa4c4c1b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "crypto_currency_data_historical",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("crypto_currency_data_historical_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("symbol", sa.String(length=50), nullable=False),
        sa.Column("open", sa.Float(), nullable=False),
        sa.Column("high", sa.Float(), nullable=False),
        sa.Column("low", sa.Float(), nullable=False),
        sa.Column("close", sa.Float(), nullable=False),
        sa.Column("volume", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", "crypto_currency_data_historical_id"),
    )
    op.create_index(
        op.f("ix_crypto_currency_data_historical_crypto_currency_data_historical_id"),
        "crypto_currency_data_historical",
        ["crypto_currency_data_historical_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_crypto_currency_data_historical_id"),
        "crypto_currency_data_historical",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_crypto_currency_data_historical_symbol"),
        "crypto_currency_data_historical",
        ["symbol"],
        unique=False,
    )
    op.create_table(
        "market_data_historical",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("market_data_historical_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("symbol", sa.String(length=50), nullable=False),
        sa.Column("open", sa.Float(), nullable=False),
        sa.Column("high", sa.Float(), nullable=False),
        sa.Column("low", sa.Float(), nullable=False),
        sa.Column("close", sa.Float(), nullable=False),
        sa.Column("volume", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", "market_data_historical_id"),
    )
    op.create_index(
        op.f("ix_market_data_historical_id"),
        "market_data_historical",
        ["id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_market_data_historical_market_data_historical_id"),
        "market_data_historical",
        ["market_data_historical_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_market_data_historical_symbol"),
        "market_data_historical",
        ["symbol"],
        unique=False,
    )
    op.create_table(
        "portfolio",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("portfolio_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.user_id"],
        ),
        sa.PrimaryKeyConstraint("portfolio_id"),
    )
    op.create_index(op.f("ix_portfolio_id"), "portfolio", ["id"], unique=True)
    op.create_index(
        op.f("ix_portfolio_portfolio_id"), "portfolio", ["portfolio_id"], unique=True
    )
    op.create_table(
        "portfolio_stock",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("portfolio_stock_id", sa.UUID(), nullable=False),
        sa.Column("portfolio_id", sa.UUID(), nullable=False),
        sa.Column("asset_id", sa.UUID(), nullable=False),
        sa.Column(
            "asset_type",
            sa.Enum("STOCK", "CRYPTOCURRENCY", name="assettype"),
            nullable=False,
        ),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column("purchase_date", sa.String(), nullable=False),
        sa.Column("purchase_price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "average_purchase_price", sa.Numeric(precision=10, scale=2), nullable=False
        ),
        sa.Column("total_quantity", sa.Integer(), nullable=False),
        sa.Column(
            "total_investment", sa.Numeric(precision=10, scale=2), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolio.portfolio_id"],
        ),
        sa.PrimaryKeyConstraint("id", "portfolio_stock_id"),
    )
    op.create_index(
        op.f("ix_portfolio_stock_id"), "portfolio_stock", ["id"], unique=True
    )
    op.create_index(
        op.f("ix_portfolio_stock_portfolio_stock_id"),
        "portfolio_stock",
        ["portfolio_stock_id"],
        unique=True,
    )
    op.create_table(
        "transaction",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("transaction_id", sa.UUID(), nullable=False),
        sa.Column("portfolio_stock_id", sa.UUID(), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("BUY", "SELL", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("transaction_date", sa.DateTime(), nullable=False),
        sa.Column("transaction_price", sa.Float(), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column(
            "order_type", sa.Enum("MARKET", "LIMIT", name="ordertype"), nullable=False
        ),
        sa.Column("limit_price", sa.Float(), nullable=True),
        sa.Column("transaction_value", sa.Float(), nullable=False),
        sa.Column("realized_profit_loss", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["portfolio_stock_id"],
            ["portfolio.portfolio_id"],
        ),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    op.create_index(op.f("ix_transaction_id"), "transaction", ["id"], unique=True)
    op.create_index(
        op.f("ix_transaction_transaction_id"),
        "transaction",
        ["transaction_id"],
        unique=True,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_transaction_id"), table_name="transaction")
    op.drop_index(op.f("ix_transaction_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(
        op.f("ix_portfolio_stock_portfolio_stock_id"), table_name="portfolio_stock"
    )
    op.drop_index(op.f("ix_portfolio_stock_id"), table_name="portfolio_stock")
    op.drop_table("portfolio_stock")
    op.drop_index(op.f("ix_portfolio_portfolio_id"), table_name="portfolio")
    op.drop_index(op.f("ix_portfolio_id"), table_name="portfolio")
    op.drop_table("portfolio")
    op.drop_index(
        op.f("ix_market_data_historical_symbol"), table_name="market_data_historical"
    )
    op.drop_index(
        op.f("ix_market_data_historical_market_data_historical_id"),
        table_name="market_data_historical",
    )
    op.drop_index(
        op.f("ix_market_data_historical_id"), table_name="market_data_historical"
    )
    op.drop_table("market_data_historical")
    op.drop_index(
        op.f("ix_crypto_currency_data_historical_symbol"),
        table_name="crypto_currency_data_historical",
    )
    op.drop_index(
        op.f("ix_crypto_currency_data_historical_id"),
        table_name="crypto_currency_data_historical",
    )
    op.drop_index(
        op.f("ix_crypto_currency_data_historical_crypto_currency_data_historical_id"),
        table_name="crypto_currency_data_historical",
    )
    op.drop_table("crypto_currency_data_historical")
    # ### end Alembic commands ###
