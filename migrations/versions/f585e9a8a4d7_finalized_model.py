"""Finalized model

Revision ID: f585e9a8a4d7
Revises: 1db58cfc418b
Create Date: 2023-07-30 11:45:38.374315

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "f585e9a8a4d7"
down_revision = "1db58cfc418b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "assets",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=False, start=1, cycle=True),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("asset_id", sa.UUID(), nullable=False),
        sa.Column("symbol", sa.String(length=20), nullable=False),
        sa.Column("name", sa.String(length=20), nullable=False),
        sa.Column(
            "exchange",
            sa.Enum("NYSE", "LSE", "CRYPTOCURRENCY", name="exchange"),
            nullable=False,
        ),
        sa.Column("current_price", sa.Float(), nullable=False),
        sa.Column("previous_close_price", sa.Float(), nullable=False),
        sa.Column("open", sa.Float(), nullable=False),
        sa.Column("high", sa.Float(), nullable=False),
        sa.Column("low", sa.Float(), nullable=False),
        sa.Column("volume", sa.Integer(), nullable=False),
        sa.Column("market_cap", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", "asset_id"),
    )
    op.create_index(op.f("ix_assets_asset_id"), "assets", ["asset_id"], unique=True)
    op.create_index(op.f("ix_assets_id"), "assets", ["id"], unique=True)
    op.add_column(
        "market_data_historical", sa.Column("asset_id", sa.UUID(), nullable=False)
    )
    op.add_column(
        "market_data_historical", sa.Column("datetime", sa.DateTime(), nullable=False)
    )
    op.drop_index(
        "ix_market_data_historical_symbol", table_name="market_data_historical"
    )
    op.create_foreign_key(
        None, "market_data_historical", "assets", ["asset_id"], ["asset_id"]
    )
    op.drop_column("market_data_historical", "name")
    op.drop_column("market_data_historical", "date")
    op.drop_column("market_data_historical", "asset_type")
    op.drop_column("market_data_historical", "symbol")
    op.add_column("portfolio", sa.Column("balance", sa.Float(), nullable=False))
    op.drop_constraint(
        "portfolio_stock_asset_id_fkey", "portfolio_stock", type_="foreignkey"
    )
    op.create_foreign_key(None, "portfolio_stock", "assets", ["asset_id"], ["asset_id"])
    op.drop_column("portfolio_stock", "average_purchase_price")
    op.drop_column("portfolio_stock", "total_quantity")
    op.add_column("transaction", sa.Column("asset_id", sa.UUID(), nullable=False))
    transaction_status = postgresql.ENUM(
        "PENDING", "CANCELLED", "FULFILLED", name="transactionstatus", create_type=False
    )
    transaction_status.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "transaction",
        sa.Column("transaction_status", transaction_status, nullable=False),
    )
    op.create_foreign_key(None, "transaction", "assets", ["asset_id"], ["asset_id"])
    op.drop_column("transaction", "realized_profit_loss")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "transaction",
        sa.Column(
            "realized_profit_loss",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "transaction", type_="foreignkey")
    op.drop_column("transaction", "transaction_status")
    op.drop_column("transaction", "asset_id")
    op.add_column(
        "portfolio_stock",
        sa.Column("total_quantity", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "portfolio_stock",
        sa.Column(
            "average_purchase_price",
            sa.NUMERIC(precision=10, scale=2),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "portfolio_stock", type_="foreignkey")
    op.create_foreign_key(
        "portfolio_stock_asset_id_fkey",
        "portfolio_stock",
        "market_data_historical",
        ["asset_id"],
        ["market_data_historical_id"],
    )
    op.drop_column("portfolio", "balance")
    op.add_column(
        "market_data_historical",
        sa.Column("symbol", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.add_column(
        "market_data_historical",
        sa.Column(
            "asset_type",
            postgresql.ENUM("STOCK", "CRYPTOCURRENCY", name="assettype"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "market_data_historical",
        sa.Column("date", sa.DATE(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "market_data_historical",
        sa.Column("name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "market_data_historical", type_="foreignkey")
    op.create_index(
        "ix_market_data_historical_symbol",
        "market_data_historical",
        ["symbol"],
        unique=False,
    )
    op.drop_column("market_data_historical", "datetime")
    op.drop_column("market_data_historical", "asset_id")
    op.drop_index(op.f("ix_assets_id"), table_name="assets")
    op.drop_index(op.f("ix_assets_asset_id"), table_name="assets")
    op.drop_table("assets")
    # ### end Alembic commands ###
